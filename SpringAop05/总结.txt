AOP(Aspect Oriented Programming)面向切面的编程
	在不改变业务代码的情况下，添加一个新的功能
	切面（aspect）：横切关注点（跨越应用程序模块的功能）被模块化的对象
	通知（advice）：切面必须完成的工作
	目标（target）：被通知的对象
	代理（proxy）：目标通知过后创建的对象
	连接点（joinpoint）:程序执行某个特定的位置add如类的某个方法调用前、调用后、方法抛出异常
	连接点（joinpoint):方法表示程序执行点，相对点表示方位UserService add
	切点（Pointcut）:每个类都有多个连接点
	Aop:通过切点定位到特定的连接点
	连接点相当于数据库中的纪律，切点相当于查询条件
	
通知类型：
	1.前置通知：在方法执行之前执行
	2.后置通知：在方法执行之后执行
	3.环绕通知：围绕着方法执行
	
	